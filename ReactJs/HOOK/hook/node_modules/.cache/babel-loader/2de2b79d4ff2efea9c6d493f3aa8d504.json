{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Github\\\\Git\\\\JavaScript_Cybersoft_FE53\\\\Luyentap\\\\Framework\\\\ReactJs\\\\Hook\\\\hook\\\\src\\\\Hook\\\\DemoUseEffect\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ChildUseEffect from \"./ChildUseEffect\";\nexport default function DemoUseEffect(props) {\n  // let [number, setNumber] = useState(1);\n  // const handleIncrease = () => {\n  //   setNumber(number + 1);\n  // };\n  // //là hàm chạy sau khi render || sẽ chạy cả 2 didmount và didupdate trong mọi trường hợp\n  // // useEffect(() => {\n  // //   console.log(\"didmount\");\n  // // });\n  // // cách viết thay thế cho componentdidmout cho []\n  // useEffect(() => {\n  //   console.log(\"didmount\");\n  // }, []);\n  // // cách viết thay thế cho componentdidupdate\n  // useEffect(() => {\n  //   console.log(\"didupdate\");\n  //   return () => {\n  //     console.log(\"willmount\");\n  //   };\n  // }, [number]);\n  // console.log(\"render\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"abc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = DemoUseEffect;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoUseEffect\");","map":{"version":3,"sources":["D:/Github/Git/JavaScript_Cybersoft_FE53/Luyentap/Framework/ReactJs/Hook/hook/src/Hook/DemoUseEffect/index.js"],"names":["React","useState","useEffect","ChildUseEffect","DemoUseEffect","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;KAhDuBD,a","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ChildUseEffect from \"./ChildUseEffect\";\r\n\r\nexport default function DemoUseEffect(props) {\r\n  // let [number, setNumber] = useState(1);\r\n  // const handleIncrease = () => {\r\n  //   setNumber(number + 1);\r\n  // };\r\n\r\n  // //là hàm chạy sau khi render || sẽ chạy cả 2 didmount và didupdate trong mọi trường hợp\r\n  // // useEffect(() => {\r\n  // //   console.log(\"didmount\");\r\n  // // });\r\n\r\n  // // cách viết thay thế cho componentdidmout cho []\r\n  // useEffect(() => {\r\n  //   console.log(\"didmount\");\r\n  // }, []);\r\n\r\n  // // cách viết thay thế cho componentdidupdate\r\n  // useEffect(() => {\r\n  //   console.log(\"didupdate\");\r\n  //   return () => {\r\n  //     console.log(\"willmount\");\r\n  //   };\r\n  // }, [number]);\r\n\r\n  // console.log(\"render\");\r\n  return (\r\n    <div>\r\n      {/* <div className=\"card\">\r\n        <img\r\n          style={{ width: 250, height: 250 }}\r\n          className=\"card-img-top\"\r\n          src=\"https://cdn141.picsart.com/326064119132201.jpg\"\r\n          alt=\"abc\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">Title</h4>\r\n          <p className=\"card-text\">{number} tim</p>\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"btn btn-success\" onClick={handleIncrease}>\r\n        Tang\r\n      </button>\r\n\r\n      {number === 1 ? <ChildUseEffect /> : \"\"} */}\r\n      abc\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}